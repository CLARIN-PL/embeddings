[tool.poetry]
name = "clarinpl-embeddings"
version = "0.0.1"
description = ""
license = "MIT"
authors = [
    "Roman Bartusiak <riomus@gmail.com>",
    "≈Åukasz Augustyniak <luk.augustyniak@gmail.com>",
    "Albert Sawczyn <albertsawczyn@gmail.com>",
    "Kamil Tagowski <kamil.tagowski@gmail.com>"
]
homepage = "https://github.com/CLARIN-PL/embeddings"
packages = [
    { include = "experimental" },
    { include = "embeddings" },
    { include = "experimental/**/*.py" },
    { include = "embeddings/**/*.py" },
]

[tool.poetry.dependencies]
python = "3.9.6"
transformers = "4.8.2"
torch = "1.9.0"
flair = "0.9"
requests = "2.25.1"
scikit-learn = "0.24.1"
srsly = "2.4.1"
datasets = "1.6.1"
Pillow = "8.2.0"
tensorboard = "2.4.1"
typer = "0.3.2"
seqeval = "1.2.2"
numpy = "1.19.5"
pymagnitude = { version="0.1.143", optional=true}


[tool.poetry.dev-dependencies]
pytest = "6.2.4"
mypy = "0.910"
black = "21.6b0"
typing-extensions = "3.7.4"
isort = { version = "5.9.1", extras = ["pyproject"] }
pyflakes = "2.3.1"
poethepoet = "0.10.0"
types-requests = "2.25.0"

[tool.poe.tasks]
black = "black --check ./"
isort = "isort .  -c"
black_fix = "black ./"
isort_fix = "isort . "
pyflakes = "pyflakes ."
mypy = "mypy -p embeddings"
test = "pytest"
check = ["black", "isort", "mypy", "pyflakes"]
fix = ["black_fix", "isort_fix"]
all = ["check", "test"]

[tool.poetry.extras]
developer = ["black", "mypy", "typing-extensions"]
pymagnitude = ["pymagnitude"]

[build-system]
requires = ["poetry>=1.1.5"]
build-backend = "poetry.masonry.api"

[tool.pytest.ini_options]
testpaths = "tests"

[tool.black]
line-length = 100

[tool.isort]
line_length = 100
known_first_party = "embeddings"
known_third_party = ["click", "pytest"]
profile = "black"

[tool.mypy]
python_version = "3.9"
strict = true

[[tool.mypy.overrides]]
module = [
    "datasets",
    "flair.*",
    "numpy",
    "sklearn.*",
    "srsly",
    "tqdm.*",
    "transformers",
    "numpy.random",
    "huggingface_hub",
    "pymagnitude",
    "spacy.*",
    "spacy",
    "appdirs",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "spacy.*",
    "torch.testing",
]
implicit_reexport = true
