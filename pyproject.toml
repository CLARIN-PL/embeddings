[tool.poetry]
name = "clarinpl-embeddings"
version = "0.2.0"
description = ""
license = "MIT"
authors = [
    "Roman Bartusiak <riomus@gmail.com>",
    "≈Åukasz Augustyniak <luk.augustyniak@gmail.com>",
    "Albert Sawczyn <albertsawczyn@gmail.com>",
    "Kamil Tagowski <kamil.tagowski@gmail.com>"
]
homepage = "https://github.com/CLARIN-PL/embeddings"
packages = [
    { include = "experimental" },
    { include = "embeddings" },
    { include = "experimental/**/*.py" },
    { include = "embeddings/**/*.py" },
]

[tool.poetry.dependencies]
python = ">= 3.8.0, <4.0"
annoy = { version=">=1.17.0", optional=true}
appdirs = ">=1.4.4"
click = "8.0.4" # temporary frozen due to problems with the 8.1.0 version
datasets = ">=1.16.1"
evaluate = ">=0.4.0"
intel-openmp = {version="^2022.0.3", platform="win32"}
lz4 = { version=">=3.1.10", optional=true}
numpy = ">=1.20.0, <=1.23.4"
onnx = ">=1.13.1"
optuna = ">=2.9.1"
Pillow = ">=8.2.0"
pydantic = ">=1.8.2"
pytorch-lightning = "1.5.4"
requests = ">=2.25.1"
sacremoses = ">=0.0.53"
scikit-learn = ">=1.0.0"
seqeval = ">=1.2.2"
srsly = ">=2.4.1"
scipy = ">=1.6.2"
tensorboard = ">=2.4.1"
tokenizers = ">=0.13.2"
torch = ">=1.9, <1.12.0"
transformers = {extras = ["onnx"], version = ">=4.26.0"}
typer = ">=0.4.0"
types-PyYAML = ">=5.4.10"
types-setuptools = ">=57.4.11"
typing-extensions = ">=4.0.1.0"
wandb = ">=0.12.10"
setuptools = ">=65.5.1"

[tool.poetry.dev-dependencies]
black = "21.12b0"
isort = { version = "5.10.1", extras = ["pyproject"] }
mypy = "0.991"
poethepoet = "0.11.0"
pyflakes = "2.4.0"
pytest = "6.2.5"
types-requests = "2.26.1"
coverage = {extras = ["toml"], version = "6.2"}
pytest-env = "0.6.2"
nbdev = ">=2.3.9"
jupyterlab = ">=3.5.0"

[tool.poetry.group.dev.dependencies]
nbdev = ">=2.3.11"

[tool.poe.tasks]
black = "black --check ./"
isort = "isort .  -c"
black_fix = "black ./"
isort_fix = "isort . "
pyflakes = "pyflakes embeddings"
mypy = "mypy -p embeddings --exclude 'experimental/' --exclude 'experimental/*' --exclude 'experimental/embeddings' --exclude 'experimental.embeddings'"
mypy_local = "mypy -p embeddings"
mypy_examples = "mypy examples --exclude 'experimental/' --exclude 'experimental/*' --exclude 'experimental/embeddings' --exclude 'experimental.embeddings'"
mypy_examples_local = "mypy examples"
coverage_test = "coverage run -m pytest"
coverage_report = "coverage report -mi"
test = ["coverage_test", "coverage_report"]
check = ["black", "isort", "pyflakes", "mypy", "mypy_examples"]
check_local = ["black", "isort", "pyflakes", "mypy_local", "mypy_examples_local"]
fix = ["black_fix", "isort_fix"]
all = ["check", "test"]
fix_check = ["fix", "check"]
force-torch-cuda = "python -m pip install torch==1.12.1+cu113 torchvision==0.13.1+cu113 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu113"

[tool.poetry.extras]
developer = ["black", "mypy", "typing-extensions"]

[build-system]
requires = ["setuptools", "poetry>=1.2", "poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = "tests"
addopts = "--maxfail=100"
env = [
    "WANDB_MODE = disabled",
]

[tool.black]
line-length = 100

[tool.isort]
line_length = 100
known_first_party = "embeddings"
known_third_party = ["click", "pytest"]
profile = "black"

[tool.mypy]
python_version = "3.9"
strict = true
plugins = "numpy.typing.mypy_plugin"

[[tool.mypy.overrides]]
module = [
    "flair.*",
    "numpy",
    "sklearn.*",
    "srsly",
    "tqdm.*",
    "numpy.random",
    "huggingface_hub",
    "pandas",
    "pymagnitude",
    "spacy.*",
    "spacy",
    "appdirs",
    "dataset.arrow_dataset",
    "seqeval.*",
    "transformers",
    "transformers.*",
    "evaluate",
    "datasets"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "spacy.*",
    "torch.testing",
    "torch",
    "datasets",
    "pytorch_lightning.accelerators"
]
implicit_reexport = true

# due to https://github.com/huggingface/transformers/issues/13390#issuecomment-934830946
[[tool.mypy.overrides]]
module = [
    "experimental",
    "experimental.*",
    "transformers.*"
]
follow_imports = "skip"

[tool.coverage.run]
omit = [".*", "*/site-packages/*"]

[tool.coverage.report]
fail_under = 80
