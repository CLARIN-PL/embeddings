name: CI
on: pull_request

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9, 3.8]
        poetry-version: [ 1.3.2 ]
        os: [ ubuntu-20.04, macos-latest, windows-2022 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        name: Load cached venv
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: ${{github.event.pull_request.head.ref}}-venv-${{ runner.os }}-${{matrix.python-version}}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            main-venv-${{ runner.os }}-${{matrix.python-version}}-${{ hashFiles('**/poetry.lock') }}
            main-venv-${{ runner.os }}-${{matrix.python-version}}-
      - uses: actions/cache@v3
        name: Load cached HF
        id: cached-huggingface-data
        with:
          path: .hf
          key: ${{github.event.pull_request.head.ref}}-hf-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            main-hf-${{ hashFiles('**/poetry.lock') }}
            main-hf-
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install deps
        run: poetry install -vv --no-interaction --no-root --extras "developer"
      - name: Run tests
        run: poetry run poe test
        env:
          HF_HOME: .hf
          TRANSFORMERS_OFFLINE: false
  lint:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9]
        poetry-version: [ 1.3.2 ]
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - uses: actions/cache@v3
        name: Load cached venv
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: ${{github.event.pull_request.head.ref}}-venv-${{ runner.os }}-${{matrix.python-version}}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            main-venv-${{ runner.os }}-${{matrix.python-version}}-${{ hashFiles('**/poetry.lock') }}
            main-venv-${{ runner.os }}-${{matrix.python-version}}-
      - name: Install deps
        run: poetry install -vv --no-interaction --no-root --extras "developer"
      - name: Check
        run: poetry run poe check
  publish:
    needs:
      - tests
      - lint
    environment: Test deployment
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.9 ]
        poetry-version: [ 1.3.2 ]
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - uses: actions/cache@v3
        name: Load cached venv
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: ${{github.event.pull_request.head.ref}}-venv-${{ runner.os }}-${{matrix.python-version}}-${{ hashFiles('**/poetry.lock') }}
      - name: Install deps
        run: poetry install -vv --no-interaction --no-root --extras "developer"
      - name: Build and publish
        run: |
          poetry version "$(git describe --tags --abbrev=0)a${GITHUB_RUN_ID}${GITHUB_RUN_NUMBER}"
          poetry build
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry publish -r testpypi --username __token__ --password ${{ secrets.TEST_PYPI_API_TOKEN }}

